// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: ezdev/agent/pc_agent_server.proto

package agent

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_ezdev_agent_pc_agent_server_proto protoreflect.FileDescriptor

var file_ezdev_agent_pc_agent_server_proto_rawDesc = []byte{
	0x0a, 0x21, 0x65, 0x7a, 0x64, 0x65, 0x76, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x63,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x22, 0x65, 0x7a, 0x64, 0x65,
	0x76, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x63, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x98,
	0x04, 0x0a, 0x07, 0x50, 0x63, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1c,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x6a, 0x6d, 0x6e, 0x73, 0x73, 0x79, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var file_ezdev_agent_pc_agent_server_proto_goTypes = []interface{}{
	(*GetContainerListRequest)(nil),  // 0: agent.GetContainerListRequest
	(*CreateContainerRequest)(nil),   // 1: agent.CreateContainerRequest
	(*StartContainerRequest)(nil),    // 2: agent.StartContainerRequest
	(*RestartContainerRequest)(nil),  // 3: agent.RestartContainerRequest
	(*StopContainerRequest)(nil),     // 4: agent.StopContainerRequest
	(*DeleteContainerRequest)(nil),   // 5: agent.DeleteContainerRequest
	(*GetStatusRequest)(nil),         // 6: agent.GetStatusRequest
	(*GetContainerListResponse)(nil), // 7: agent.GetContainerListResponse
	(*CommonResponse)(nil),           // 8: agent.CommonResponse
	(*GetStatsResponse)(nil),         // 9: agent.GetStatsResponse
}
var file_ezdev_agent_pc_agent_server_proto_depIdxs = []int32{
	0, // 0: agent.PcAgent.GetContainerList:input_type -> agent.GetContainerListRequest
	1, // 1: agent.PcAgent.CreateContainer:input_type -> agent.CreateContainerRequest
	2, // 2: agent.PcAgent.StartContainer:input_type -> agent.StartContainerRequest
	3, // 3: agent.PcAgent.RestartContainer:input_type -> agent.RestartContainerRequest
	4, // 4: agent.PcAgent.StopContainer:input_type -> agent.StopContainerRequest
	5, // 5: agent.PcAgent.DeleteContainer:input_type -> agent.DeleteContainerRequest
	6, // 6: agent.PcAgent.GetStatus:input_type -> agent.GetStatusRequest
	7, // 7: agent.PcAgent.GetContainerList:output_type -> agent.GetContainerListResponse
	8, // 8: agent.PcAgent.CreateContainer:output_type -> agent.CommonResponse
	8, // 9: agent.PcAgent.StartContainer:output_type -> agent.CommonResponse
	8, // 10: agent.PcAgent.RestartContainer:output_type -> agent.CommonResponse
	8, // 11: agent.PcAgent.StopContainer:output_type -> agent.CommonResponse
	8, // 12: agent.PcAgent.DeleteContainer:output_type -> agent.CommonResponse
	9, // 13: agent.PcAgent.GetStatus:output_type -> agent.GetStatsResponse
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ezdev_agent_pc_agent_server_proto_init() }
func file_ezdev_agent_pc_agent_server_proto_init() {
	if File_ezdev_agent_pc_agent_server_proto != nil {
		return
	}
	file_ezdev_agent_pc_agent_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ezdev_agent_pc_agent_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ezdev_agent_pc_agent_server_proto_goTypes,
		DependencyIndexes: file_ezdev_agent_pc_agent_server_proto_depIdxs,
	}.Build()
	File_ezdev_agent_pc_agent_server_proto = out.File
	file_ezdev_agent_pc_agent_server_proto_rawDesc = nil
	file_ezdev_agent_pc_agent_server_proto_goTypes = nil
	file_ezdev_agent_pc_agent_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PcAgentClient is the client API for PcAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PcAgentClient interface {
	GetContainerList(ctx context.Context, in *GetContainerListRequest, opts ...grpc.CallOption) (*GetContainerListResponse, error)
	CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error)
	StartContainer(ctx context.Context, in *StartContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error)
	RestartContainer(ctx context.Context, in *RestartContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error)
	StopContainer(ctx context.Context, in *StopContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error)
	DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error)
	GetStatus(ctx context.Context, opts ...grpc.CallOption) (PcAgent_GetStatusClient, error)
}

type pcAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewPcAgentClient(cc grpc.ClientConnInterface) PcAgentClient {
	return &pcAgentClient{cc}
}

func (c *pcAgentClient) GetContainerList(ctx context.Context, in *GetContainerListRequest, opts ...grpc.CallOption) (*GetContainerListResponse, error) {
	out := new(GetContainerListResponse)
	err := c.cc.Invoke(ctx, "/agent.PcAgent/GetContainerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pcAgentClient) CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/agent.PcAgent/CreateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pcAgentClient) StartContainer(ctx context.Context, in *StartContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/agent.PcAgent/StartContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pcAgentClient) RestartContainer(ctx context.Context, in *RestartContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/agent.PcAgent/RestartContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pcAgentClient) StopContainer(ctx context.Context, in *StopContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/agent.PcAgent/StopContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pcAgentClient) DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/agent.PcAgent/DeleteContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pcAgentClient) GetStatus(ctx context.Context, opts ...grpc.CallOption) (PcAgent_GetStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PcAgent_serviceDesc.Streams[0], "/agent.PcAgent/GetStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &pcAgentGetStatusClient{stream}
	return x, nil
}

type PcAgent_GetStatusClient interface {
	Send(*GetStatusRequest) error
	Recv() (*GetStatsResponse, error)
	grpc.ClientStream
}

type pcAgentGetStatusClient struct {
	grpc.ClientStream
}

func (x *pcAgentGetStatusClient) Send(m *GetStatusRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pcAgentGetStatusClient) Recv() (*GetStatsResponse, error) {
	m := new(GetStatsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PcAgentServer is the server API for PcAgent service.
type PcAgentServer interface {
	GetContainerList(context.Context, *GetContainerListRequest) (*GetContainerListResponse, error)
	CreateContainer(context.Context, *CreateContainerRequest) (*CommonResponse, error)
	StartContainer(context.Context, *StartContainerRequest) (*CommonResponse, error)
	RestartContainer(context.Context, *RestartContainerRequest) (*CommonResponse, error)
	StopContainer(context.Context, *StopContainerRequest) (*CommonResponse, error)
	DeleteContainer(context.Context, *DeleteContainerRequest) (*CommonResponse, error)
	GetStatus(PcAgent_GetStatusServer) error
}

// UnimplementedPcAgentServer can be embedded to have forward compatible implementations.
type UnimplementedPcAgentServer struct {
}

func (*UnimplementedPcAgentServer) GetContainerList(context.Context, *GetContainerListRequest) (*GetContainerListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainerList not implemented")
}
func (*UnimplementedPcAgentServer) CreateContainer(context.Context, *CreateContainerRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainer not implemented")
}
func (*UnimplementedPcAgentServer) StartContainer(context.Context, *StartContainerRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartContainer not implemented")
}
func (*UnimplementedPcAgentServer) RestartContainer(context.Context, *RestartContainerRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartContainer not implemented")
}
func (*UnimplementedPcAgentServer) StopContainer(context.Context, *StopContainerRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopContainer not implemented")
}
func (*UnimplementedPcAgentServer) DeleteContainer(context.Context, *DeleteContainerRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContainer not implemented")
}
func (*UnimplementedPcAgentServer) GetStatus(PcAgent_GetStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}

func RegisterPcAgentServer(s *grpc.Server, srv PcAgentServer) {
	s.RegisterService(&_PcAgent_serviceDesc, srv)
}

func _PcAgent_GetContainerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PcAgentServer).GetContainerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.PcAgent/GetContainerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PcAgentServer).GetContainerList(ctx, req.(*GetContainerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PcAgent_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PcAgentServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.PcAgent/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PcAgentServer).CreateContainer(ctx, req.(*CreateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PcAgent_StartContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PcAgentServer).StartContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.PcAgent/StartContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PcAgentServer).StartContainer(ctx, req.(*StartContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PcAgent_RestartContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestartContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PcAgentServer).RestartContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.PcAgent/RestartContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PcAgentServer).RestartContainer(ctx, req.(*RestartContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PcAgent_StopContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PcAgentServer).StopContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.PcAgent/StopContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PcAgentServer).StopContainer(ctx, req.(*StopContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PcAgent_DeleteContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PcAgentServer).DeleteContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.PcAgent/DeleteContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PcAgentServer).DeleteContainer(ctx, req.(*DeleteContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PcAgent_GetStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PcAgentServer).GetStatus(&pcAgentGetStatusServer{stream})
}

type PcAgent_GetStatusServer interface {
	Send(*GetStatsResponse) error
	Recv() (*GetStatusRequest, error)
	grpc.ServerStream
}

type pcAgentGetStatusServer struct {
	grpc.ServerStream
}

func (x *pcAgentGetStatusServer) Send(m *GetStatsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pcAgentGetStatusServer) Recv() (*GetStatusRequest, error) {
	m := new(GetStatusRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PcAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.PcAgent",
	HandlerType: (*PcAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetContainerList",
			Handler:    _PcAgent_GetContainerList_Handler,
		},
		{
			MethodName: "CreateContainer",
			Handler:    _PcAgent_CreateContainer_Handler,
		},
		{
			MethodName: "StartContainer",
			Handler:    _PcAgent_StartContainer_Handler,
		},
		{
			MethodName: "RestartContainer",
			Handler:    _PcAgent_RestartContainer_Handler,
		},
		{
			MethodName: "StopContainer",
			Handler:    _PcAgent_StopContainer_Handler,
		},
		{
			MethodName: "DeleteContainer",
			Handler:    _PcAgent_DeleteContainer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetStatus",
			Handler:       _PcAgent_GetStatus_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "ezdev/agent/pc_agent_server.proto",
}
