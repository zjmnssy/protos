// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.1
// source: common/error_code.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误码, 说明:
// 1. 错误码命名规则为: 服务类型+错误说明
type ErrorCode int32

const (
	// 常规 0
	ErrorCode_Success ErrorCode = 0
	// web 200 - 999
	ErrorCode_WebSuccess ErrorCode = 200
	// web 1000 - 1099
	ErrorCode_WebError               ErrorCode = 1000
	ErrorCode_WebMethodError         ErrorCode = 1001
	ErrorCode_WebRouteNotFound       ErrorCode = 1002
	ErrorCode_WebCookieOntFound      ErrorCode = 1003
	ErrorCode_WebCookieIllegal       ErrorCode = 1004
	ErrorCode_WebMissingOfCSRF       ErrorCode = 1005
	ErrorCode_WebIllegalAccessOfCSRF ErrorCode = 1006
	// system 1100 - 1199
	ErrorCode_SystemError                ErrorCode = 1100
	ErrorCode_SystemBusy                 ErrorCode = 1101
	ErrorCode_JSONMarshalError           ErrorCode = 1102
	ErrorCode_JSONUnmarshalError         ErrorCode = 1103
	ErrorCode_CredentialMissing          ErrorCode = 1104
	ErrorCode_CredentialParseError       ErrorCode = 1105
	ErrorCode_GetInfoFromCredentialError ErrorCode = 1106
	ErrorCode_CredentialExpired          ErrorCode = 1107
	ErrorCode_UsernameOrPasswordError    ErrorCode = 1108
	ErrorCode_RecommendCodeError         ErrorCode = 1109
	ErrorCode_VerificationCodeError      ErrorCode = 1110
	ErrorCode_UsernameHasExists          ErrorCode = 1111
	ErrorCode_PhoneHasExists             ErrorCode = 1112
	ErrorCode_EmailHasExists             ErrorCode = 1113
	ErrorCode_UsernameFormatError        ErrorCode = 1114
	ErrorCode_EmailFormatError           ErrorCode = 1115
	ErrorCode_PhoneFormatError           ErrorCode = 1116
	ErrorCode_ParameterError             ErrorCode = 1117
	ErrorCode_ConfigurationExists        ErrorCode = 1118
	// 通信 1200 - 1299
	ErrorCode_NetworkCommonError       ErrorCode = 1200
	ErrorCode_NetworkDeadline          ErrorCode = 1201
	ErrorCode_NetworkConnectionRefused ErrorCode = 1202
	ErrorCode_NetworkDestUnreachable   ErrorCode = 1203
	// sql 1300 - 1399
	ErrorCode_SqlCommonError         ErrorCode = 1300
	ErrorCode_SqlCertificationFailed ErrorCode = 1301
	ErrorCode_SqlPermissionDeny      ErrorCode = 1302
	ErrorCode_SqlQueryError          ErrorCode = 1303
	ErrorCode_SqlScanError           ErrorCode = 1304
	ErrorCode_SqlExecError           ErrorCode = 1305
	ErrorCode_SqlTxBeginError        ErrorCode = 1306
	ErrorCode_SqlTxRollbackError     ErrorCode = 1307
	ErrorCode_SqlTxCommitError       ErrorCode = 1308
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:    "Success",
		200:  "WebSuccess",
		1000: "WebError",
		1001: "WebMethodError",
		1002: "WebRouteNotFound",
		1003: "WebCookieOntFound",
		1004: "WebCookieIllegal",
		1005: "WebMissingOfCSRF",
		1006: "WebIllegalAccessOfCSRF",
		1100: "SystemError",
		1101: "SystemBusy",
		1102: "JSONMarshalError",
		1103: "JSONUnmarshalError",
		1104: "CredentialMissing",
		1105: "CredentialParseError",
		1106: "GetInfoFromCredentialError",
		1107: "CredentialExpired",
		1108: "UsernameOrPasswordError",
		1109: "RecommendCodeError",
		1110: "VerificationCodeError",
		1111: "UsernameHasExists",
		1112: "PhoneHasExists",
		1113: "EmailHasExists",
		1114: "UsernameFormatError",
		1115: "EmailFormatError",
		1116: "PhoneFormatError",
		1117: "ParameterError",
		1118: "ConfigurationExists",
		1200: "NetworkCommonError",
		1201: "NetworkDeadline",
		1202: "NetworkConnectionRefused",
		1203: "NetworkDestUnreachable",
		1300: "SqlCommonError",
		1301: "SqlCertificationFailed",
		1302: "SqlPermissionDeny",
		1303: "SqlQueryError",
		1304: "SqlScanError",
		1305: "SqlExecError",
		1306: "SqlTxBeginError",
		1307: "SqlTxRollbackError",
		1308: "SqlTxCommitError",
	}
	ErrorCode_value = map[string]int32{
		"Success":                    0,
		"WebSuccess":                 200,
		"WebError":                   1000,
		"WebMethodError":             1001,
		"WebRouteNotFound":           1002,
		"WebCookieOntFound":          1003,
		"WebCookieIllegal":           1004,
		"WebMissingOfCSRF":           1005,
		"WebIllegalAccessOfCSRF":     1006,
		"SystemError":                1100,
		"SystemBusy":                 1101,
		"JSONMarshalError":           1102,
		"JSONUnmarshalError":         1103,
		"CredentialMissing":          1104,
		"CredentialParseError":       1105,
		"GetInfoFromCredentialError": 1106,
		"CredentialExpired":          1107,
		"UsernameOrPasswordError":    1108,
		"RecommendCodeError":         1109,
		"VerificationCodeError":      1110,
		"UsernameHasExists":          1111,
		"PhoneHasExists":             1112,
		"EmailHasExists":             1113,
		"UsernameFormatError":        1114,
		"EmailFormatError":           1115,
		"PhoneFormatError":           1116,
		"ParameterError":             1117,
		"ConfigurationExists":        1118,
		"NetworkCommonError":         1200,
		"NetworkDeadline":            1201,
		"NetworkConnectionRefused":   1202,
		"NetworkDestUnreachable":     1203,
		"SqlCommonError":             1300,
		"SqlCertificationFailed":     1301,
		"SqlPermissionDeny":          1302,
		"SqlQueryError":              1303,
		"SqlScanError":               1304,
		"SqlExecError":               1305,
		"SqlTxBeginError":            1306,
		"SqlTxRollbackError":         1307,
		"SqlTxCommitError":           1308,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_error_code_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_common_error_code_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_common_error_code_proto_rawDescGZIP(), []int{0}
}

var File_common_error_code_proto protoreflect.FileDescriptor

var file_common_error_code_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2a, 0xc7, 0x07, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0a,
	0x57, 0x65, 0x62, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0xc8, 0x01, 0x12, 0x0d, 0x0a,
	0x08, 0x57, 0x65, 0x62, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xe8, 0x07, 0x12, 0x13, 0x0a, 0x0e,
	0x57, 0x65, 0x62, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xe9,
	0x07, 0x12, 0x15, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xea, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x57, 0x65, 0x62, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x4f, 0x6e, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xeb, 0x07,
	0x12, 0x15, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x49, 0x6c, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x10, 0xec, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x43, 0x53, 0x52, 0x46, 0x10, 0xed, 0x07, 0x12, 0x1b,
	0x0a, 0x16, 0x57, 0x65, 0x62, 0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4f, 0x66, 0x43, 0x53, 0x52, 0x46, 0x10, 0xee, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xcc, 0x08, 0x12, 0x0f, 0x0a,
	0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x75, 0x73, 0x79, 0x10, 0xcd, 0x08, 0x12, 0x15,
	0x0a, 0x10, 0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0xce, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x4a, 0x53, 0x4f, 0x4e, 0x55, 0x6e, 0x6d,
	0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xcf, 0x08, 0x12, 0x16,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x10, 0xd0, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xd1,
	0x08, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0xd2, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0xd3, 0x08, 0x12, 0x1c, 0x0a, 0x17, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xd4, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xd5,
	0x08, 0x12, 0x1a, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xd6, 0x08, 0x12, 0x16, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x73, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x10, 0xd7, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x48, 0x61,
	0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0xd8, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x48, 0x61, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0xd9, 0x08, 0x12,
	0x18, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xda, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xdb, 0x08,
	0x12, 0x15, 0x0a, 0x10, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0xdc, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xdd, 0x08, 0x12, 0x18, 0x0a, 0x13,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x10, 0xde, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xb0, 0x09, 0x12,
	0x14, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x10, 0xb1, 0x09, 0x12, 0x1d, 0x0a, 0x18, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65,
	0x64, 0x10, 0xb2, 0x09, 0x12, 0x1b, 0x0a, 0x16, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44,
	0x65, 0x73, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x10, 0xb3,
	0x09, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x71, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x94, 0x0a, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x71, 0x6c, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x10, 0x95, 0x0a, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x71, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6e, 0x79, 0x10, 0x96, 0x0a, 0x12, 0x12, 0x0a, 0x0d, 0x53,
	0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x97, 0x0a, 0x12,
	0x11, 0x0a, 0x0c, 0x53, 0x71, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x98, 0x0a, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x71, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x99, 0x0a, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x71, 0x6c, 0x54, 0x78, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x9a, 0x0a, 0x12, 0x17, 0x0a, 0x12, 0x53,
	0x71, 0x6c, 0x54, 0x78, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x9b, 0x0a, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x71, 0x6c, 0x54, 0x78, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x9c, 0x0a, 0x42, 0x15, 0x5a, 0x13, 0x67,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_error_code_proto_rawDescOnce sync.Once
	file_common_error_code_proto_rawDescData = file_common_error_code_proto_rawDesc
)

func file_common_error_code_proto_rawDescGZIP() []byte {
	file_common_error_code_proto_rawDescOnce.Do(func() {
		file_common_error_code_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_error_code_proto_rawDescData)
	})
	return file_common_error_code_proto_rawDescData
}

var file_common_error_code_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_error_code_proto_goTypes = []interface{}{
	(ErrorCode)(0), // 0: common.ErrorCode
}
var file_common_error_code_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_error_code_proto_init() }
func file_common_error_code_proto_init() {
	if File_common_error_code_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_error_code_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_error_code_proto_goTypes,
		DependencyIndexes: file_common_error_code_proto_depIdxs,
		EnumInfos:         file_common_error_code_proto_enumTypes,
	}.Build()
	File_common_error_code_proto = out.File
	file_common_error_code_proto_rawDesc = nil
	file_common_error_code_proto_goTypes = nil
	file_common_error_code_proto_depIdxs = nil
}
