// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error_code.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 错误码, 说明:
// 1. 错误码命名规则为: 服务类型+错误说明
type ErrorCode int32

const (
	// 常规 0 - 199
	ErrorCode_Success ErrorCode = 0
	// web 200 - 699
	ErrorCode_WebSuccess        ErrorCode = 200
	ErrorCode_WebMethodError    ErrorCode = 600
	ErrorCode_WebRouteNotFound  ErrorCode = 601
	ErrorCode_WebCookieOntFound ErrorCode = 602
	ErrorCode_WebCookieIllegal  ErrorCode = 603
	// 通信 700 - 799
	ErrorCode_NetworkCommonError       ErrorCode = 700
	ErrorCode_NetworkDeadline          ErrorCode = 701
	ErrorCode_NetworkConnectionRefused ErrorCode = 702
	ErrorCode_NetworkDestUnreachable   ErrorCode = 703
	// sql 800 - 899
	ErrorCode_SqlCommonError         ErrorCode = 800
	ErrorCode_SqlCertificationFailed ErrorCode = 801
	ErrorCode_SqlPermissionDeny      ErrorCode = 802
	ErrorCode_SqlQueryError          ErrorCode = 803
	ErrorCode_SqlScanError           ErrorCode = 804
	ErrorCode_SqlExecError           ErrorCode = 805
	ErrorCode_SqlTxBeginError        ErrorCode = 806
	ErrorCode_SqlTxRoobackError      ErrorCode = 807
	ErrorCode_SqlTxCommitError       ErrorCode = 808
)

var ErrorCode_name = map[int32]string{
	0:   "Success",
	200: "WebSuccess",
	600: "WebMethodError",
	601: "WebRouteNotFound",
	602: "WebCookieOntFound",
	603: "WebCookieIllegal",
	700: "NetworkCommonError",
	701: "NetworkDeadline",
	702: "NetworkConnectionRefused",
	703: "NetworkDestUnreachable",
	800: "SqlCommonError",
	801: "SqlCertificationFailed",
	802: "SqlPermissionDeny",
	803: "SqlQueryError",
	804: "SqlScanError",
	805: "SqlExecError",
	806: "SqlTxBeginError",
	807: "SqlTxRoobackError",
	808: "SqlTxCommitError",
}

var ErrorCode_value = map[string]int32{
	"Success":                  0,
	"WebSuccess":               200,
	"WebMethodError":           600,
	"WebRouteNotFound":         601,
	"WebCookieOntFound":        602,
	"WebCookieIllegal":         603,
	"NetworkCommonError":       700,
	"NetworkDeadline":          701,
	"NetworkConnectionRefused": 702,
	"NetworkDestUnreachable":   703,
	"SqlCommonError":           800,
	"SqlCertificationFailed":   801,
	"SqlPermissionDeny":        802,
	"SqlQueryError":            803,
	"SqlScanError":             804,
	"SqlExecError":             805,
	"SqlTxBeginError":          806,
	"SqlTxRoobackError":        807,
	"SqlTxCommitError":         808,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c5513ac0a8e17e40, []int{0}
}

func init() {
	proto.RegisterEnum("common.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("error_code.proto", fileDescriptor_c5513ac0a8e17e40) }

var fileDescriptor_c5513ac0a8e17e40 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x49, 0x6e, 0xdb, 0x30,
	0x14, 0x86, 0x5b, 0xd4, 0x62, 0x51, 0x76, 0x30, 0xcd, 0xb6, 0x6e, 0x81, 0xa2, 0x17, 0xc8, 0x22,
	0x9b, 0xdc, 0x20, 0x1e, 0x80, 0x2c, 0xe2, 0x24, 0x96, 0x03, 0x2d, 0x03, 0x8a, 0x7a, 0xb6, 0x09,
	0xd3, 0x7c, 0x11, 0x45, 0x21, 0xf6, 0x6d, 0x32, 0x27, 0x47, 0xc8, 0x22, 0xc3, 0x36, 0x47, 0xc8,
	0x70, 0x99, 0x80, 0x1a, 0x8c, 0x2c, 0xf5, 0xbd, 0xff, 0xff, 0xdf, 0xfb, 0x45, 0xca, 0xc0, 0x5a,
	0xb4, 0x07, 0x12, 0x13, 0x58, 0x3f, 0xb4, 0xe8, 0x90, 0x13, 0x89, 0xf3, 0x39, 0x9a, 0xb5, 0x9b,
	0x4f, 0xf4, 0x4b, 0xcf, 0x0f, 0x3b, 0x98, 0x00, 0xff, 0x4a, 0x3f, 0x87, 0xb9, 0x94, 0x90, 0x65,
	0xec, 0x03, 0x6f, 0x52, 0x1a, 0x41, 0x5c, 0x7f, 0x3f, 0x7e, 0xe4, 0x3f, 0xe9, 0x8f, 0x08, 0xe2,
	0x6d, 0x70, 0x53, 0x4c, 0x0a, 0x0f, 0x7b, 0x6a, 0xf0, 0xdf, 0x94, 0x45, 0x10, 0x0f, 0x31, 0x77,
	0x30, 0x40, 0xd7, 0xc7, 0xdc, 0x24, 0xec, 0xb9, 0xc1, 0xdb, 0xb4, 0x15, 0x41, 0xdc, 0x41, 0x9c,
	0x29, 0xd8, 0x31, 0x15, 0x7f, 0xa9, 0xe5, 0x25, 0xdf, 0xd2, 0x1a, 0x26, 0x42, 0xb3, 0xd7, 0x06,
	0xff, 0x43, 0xf9, 0x00, 0xdc, 0x11, 0xda, 0x59, 0xa7, 0xb8, 0xab, 0x8c, 0xbf, 0x0d, 0xf8, 0x2f,
	0xda, 0xac, 0x06, 0x5d, 0x10, 0x89, 0x56, 0x06, 0xd8, 0x5d, 0xc0, 0xff, 0xd3, 0xbf, 0x2b, 0xb9,
	0x31, 0x20, 0x9d, 0x42, 0x33, 0x84, 0x71, 0x9e, 0x41, 0xc2, 0xee, 0x03, 0xfe, 0x8f, 0xb6, 0x57,
	0xa6, 0xcc, 0xed, 0x1b, 0x0b, 0x42, 0x4e, 0x45, 0xac, 0x81, 0x3d, 0x04, 0xbe, 0x45, 0x98, 0xea,
	0xf7, 0x6b, 0x8e, 0x89, 0x77, 0x78, 0x08, 0xd6, 0xa9, 0xb1, 0x92, 0xc2, 0xe7, 0xf5, 0x85, 0xd2,
	0x90, 0xb0, 0x13, 0xe2, 0xbb, 0x84, 0xa9, 0xde, 0x05, 0x3b, 0x57, 0x59, 0xa6, 0xd0, 0x74, 0xc1,
	0x2c, 0xd9, 0x29, 0xe1, 0x9c, 0x7e, 0x0f, 0x53, 0xbd, 0x97, 0x83, 0x5d, 0x96, 0x41, 0x67, 0x84,
	0xb7, 0xe8, 0xb7, 0x30, 0xd5, 0xa1, 0x14, 0x55, 0xf6, 0x79, 0x8d, 0x7a, 0x0b, 0x90, 0x25, 0xba,
	0x20, 0xbe, 0x55, 0x98, 0xea, 0xd1, 0x62, 0x13, 0x26, 0xaa, 0x12, 0x5e, 0xd6, 0x7b, 0x46, 0x8b,
	0x21, 0x62, 0x2c, 0xe4, 0xac, 0xe4, 0x57, 0xc4, 0xff, 0xb3, 0x82, 0xfb, 0x9b, 0x95, 0x2b, 0xf1,
	0x35, 0x89, 0x49, 0xf1, 0x92, 0x1b, 0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xae, 0xa9, 0xb4, 0xdf,
	0xdd, 0x01, 0x00, 0x00,
}
