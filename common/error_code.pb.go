// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error_code.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 错误码, 说明:
// 1. 错误码命名规则为: 服务类型+错误说明
type ErrorCode int32

const (
	// 常规 0
	ErrorCode_Success ErrorCode = 0
	// web 200 - 999
	ErrorCode_WebSuccess ErrorCode = 200
	// web 1000 - 1099
	ErrorCode_WebError          ErrorCode = 1000
	ErrorCode_WebMethodError    ErrorCode = 1001
	ErrorCode_WebRouteNotFound  ErrorCode = 1002
	ErrorCode_WebCookieOntFound ErrorCode = 1003
	ErrorCode_WebCookieIllegal  ErrorCode = 1004
	// web 1100 - 1199
	ErrorCode_SystemError                ErrorCode = 1100
	ErrorCode_SystemBusy                 ErrorCode = 1101
	ErrorCode_JSONMarshalError           ErrorCode = 1102
	ErrorCode_JSONUnmarshalError         ErrorCode = 1103
	ErrorCode_CredentialMissing          ErrorCode = 1104
	ErrorCode_CredentialParseError       ErrorCode = 1105
	ErrorCode_GetInfoFromCredentialError ErrorCode = 1106
	ErrorCode_CredentialExpired          ErrorCode = 1107
	// 通信 1200 - 1299
	ErrorCode_NetworkCommonError       ErrorCode = 1200
	ErrorCode_NetworkDeadline          ErrorCode = 1201
	ErrorCode_NetworkConnectionRefused ErrorCode = 1202
	ErrorCode_NetworkDestUnreachable   ErrorCode = 1203
	// sql 1300 - 1399
	ErrorCode_SqlCommonError         ErrorCode = 1300
	ErrorCode_SqlCertificationFailed ErrorCode = 1301
	ErrorCode_SqlPermissionDeny      ErrorCode = 1302
	ErrorCode_SqlQueryError          ErrorCode = 1303
	ErrorCode_SqlScanError           ErrorCode = 1304
	ErrorCode_SqlExecError           ErrorCode = 1305
	ErrorCode_SqlTxBeginError        ErrorCode = 1306
	ErrorCode_SqlTxRoobackError      ErrorCode = 1307
	ErrorCode_SqlTxCommitError       ErrorCode = 1308
)

var ErrorCode_name = map[int32]string{
	0:    "Success",
	200:  "WebSuccess",
	1000: "WebError",
	1001: "WebMethodError",
	1002: "WebRouteNotFound",
	1003: "WebCookieOntFound",
	1004: "WebCookieIllegal",
	1100: "SystemError",
	1101: "SystemBusy",
	1102: "JSONMarshalError",
	1103: "JSONUnmarshalError",
	1104: "CredentialMissing",
	1105: "CredentialParseError",
	1106: "GetInfoFromCredentialError",
	1107: "CredentialExpired",
	1200: "NetworkCommonError",
	1201: "NetworkDeadline",
	1202: "NetworkConnectionRefused",
	1203: "NetworkDestUnreachable",
	1300: "SqlCommonError",
	1301: "SqlCertificationFailed",
	1302: "SqlPermissionDeny",
	1303: "SqlQueryError",
	1304: "SqlScanError",
	1305: "SqlExecError",
	1306: "SqlTxBeginError",
	1307: "SqlTxRoobackError",
	1308: "SqlTxCommitError",
}

var ErrorCode_value = map[string]int32{
	"Success":                    0,
	"WebSuccess":                 200,
	"WebError":                   1000,
	"WebMethodError":             1001,
	"WebRouteNotFound":           1002,
	"WebCookieOntFound":          1003,
	"WebCookieIllegal":           1004,
	"SystemError":                1100,
	"SystemBusy":                 1101,
	"JSONMarshalError":           1102,
	"JSONUnmarshalError":         1103,
	"CredentialMissing":          1104,
	"CredentialParseError":       1105,
	"GetInfoFromCredentialError": 1106,
	"CredentialExpired":          1107,
	"NetworkCommonError":         1200,
	"NetworkDeadline":            1201,
	"NetworkConnectionRefused":   1202,
	"NetworkDestUnreachable":     1203,
	"SqlCommonError":             1300,
	"SqlCertificationFailed":     1301,
	"SqlPermissionDeny":          1302,
	"SqlQueryError":              1303,
	"SqlScanError":               1304,
	"SqlExecError":               1305,
	"SqlTxBeginError":            1306,
	"SqlTxRoobackError":          1307,
	"SqlTxCommitError":           1308,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c5513ac0a8e17e40, []int{0}
}

func init() {
	proto.RegisterEnum("common.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("error_code.proto", fileDescriptor_c5513ac0a8e17e40) }

var fileDescriptor_c5513ac0a8e17e40 = []byte{
	// 464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x49, 0x72, 0x13, 0x31,
	0x14, 0x86, 0x61, 0x41, 0xdc, 0x7e, 0x21, 0x44, 0x11, 0x21, 0x4c, 0x45, 0xb1, 0x67, 0xc1, 0x86,
	0x1b, 0xc4, 0xb1, 0xa9, 0x50, 0x65, 0x27, 0xb8, 0x93, 0xea, 0x25, 0xa5, 0x56, 0x3f, 0xdb, 0x2a,
	0xab, 0xf5, 0xd2, 0x92, 0xba, 0xb0, 0x2f, 0xc0, 0x09, 0x98, 0xe1, 0x10, 0x0c, 0x97, 0x60, 0xc1,
	0xcc, 0x25, 0x98, 0x0e, 0x41, 0xa9, 0x65, 0x27, 0x29, 0x96, 0xfd, 0xbd, 0xff, 0xff, 0xf5, 0xb7,
	0x9e, 0x80, 0xa1, 0xb5, 0x64, 0x1f, 0x48, 0x2a, 0xf0, 0xf6, 0x91, 0x25, 0x4f, 0x7c, 0x45, 0x52,
	0x59, 0x92, 0xb9, 0xf5, 0xe8, 0x1c, 0xb4, 0xbb, 0x61, 0xd8, 0xa1, 0x02, 0xf9, 0x2a, 0xb4, 0xd2,
	0x5a, 0x4a, 0x74, 0x8e, 0x9d, 0xe1, 0xeb, 0x00, 0x19, 0xe6, 0xcb, 0xef, 0x0f, 0x67, 0xf9, 0x1a,
	0x24, 0x19, 0xe6, 0x8d, 0x9a, 0xfd, 0x6c, 0xf1, 0x8b, 0x70, 0x21, 0xc3, 0xbc, 0x8f, 0x7e, 0x42,
	0x45, 0x84, 0xbf, 0x5a, 0xfc, 0x12, 0xb0, 0x0c, 0xf3, 0x21, 0xd5, 0x1e, 0x07, 0xe4, 0x7b, 0x54,
	0x9b, 0x82, 0xfd, 0x6e, 0xf1, 0x2d, 0xd8, 0xc8, 0x30, 0xef, 0x10, 0x4d, 0x15, 0xee, 0x99, 0x05,
	0xff, 0xb3, 0x94, 0x47, 0xbe, 0xab, 0x35, 0x8e, 0x85, 0x66, 0x7f, 0x5b, 0x9c, 0xc1, 0x6a, 0x3a,
	0x77, 0x1e, 0xcb, 0x98, 0xfb, 0x31, 0x09, 0x65, 0x22, 0xd9, 0xae, 0xdd, 0x9c, 0x7d, 0x4a, 0x82,
	0xf3, 0x5e, 0xba, 0x37, 0xe8, 0x0b, 0xeb, 0x26, 0x42, 0x47, 0xdd, 0xe7, 0x84, 0x5f, 0x06, 0x1e,
	0xf0, 0xa1, 0x29, 0x4f, 0x0f, 0xbe, 0x24, 0xa1, 0x41, 0xc7, 0x62, 0x81, 0xc6, 0x2b, 0xa1, 0xfb,
	0xca, 0x39, 0x65, 0xc6, 0xec, 0x6b, 0xc2, 0xaf, 0xc2, 0xe6, 0x09, 0xdf, 0x17, 0xd6, 0x61, 0xb4,
	0x7c, 0x4b, 0xf8, 0x4d, 0xb8, 0x76, 0x17, 0xfd, 0xae, 0x19, 0x51, 0xcf, 0x52, 0x79, 0xa2, 0x8a,
	0x82, 0xef, 0xff, 0x65, 0x76, 0x67, 0x47, 0xca, 0x62, 0xc1, 0x7e, 0x34, 0x25, 0x06, 0xe8, 0x1f,
	0x92, 0x9d, 0x76, 0x9a, 0x5b, 0x8e, 0x86, 0x37, 0x6d, 0xbe, 0x09, 0xeb, 0x8b, 0xc1, 0x0e, 0x8a,
	0x42, 0x2b, 0x83, 0xec, 0x6d, 0x9b, 0xdf, 0x80, 0x2b, 0xc7, 0x72, 0x63, 0x50, 0x7a, 0x45, 0x66,
	0x88, 0xa3, 0xda, 0x61, 0xc1, 0xde, 0xb5, 0xf9, 0x75, 0xd8, 0x3a, 0x36, 0x39, 0x7f, 0x68, 0x2c,
	0x0a, 0x39, 0x11, 0xb9, 0x46, 0xf6, 0xbe, 0x1d, 0x96, 0x90, 0x56, 0xfa, 0xf4, 0x31, 0x8f, 0x21,
	0x38, 0x02, 0x44, 0xeb, 0xd5, 0x48, 0x49, 0x11, 0xf2, 0x7a, 0x42, 0x69, 0x2c, 0xd8, 0x13, 0x08,
	0xa5, 0xd3, 0x4a, 0xef, 0xa3, 0x2d, 0xc3, 0x25, 0x90, 0xd9, 0x41, 0x33, 0x67, 0x4f, 0x81, 0x73,
	0x58, 0x4b, 0x2b, 0x7d, 0xbf, 0x46, 0x3b, 0x8f, 0x41, 0xcf, 0x80, 0x6f, 0xc0, 0xf9, 0xb4, 0xd2,
	0xa9, 0x14, 0x8b, 0xec, 0xe7, 0x4b, 0xd4, 0x9d, 0xa1, 0x8c, 0xe8, 0x05, 0x84, 0xbf, 0x4a, 0x2b,
	0x7d, 0x30, 0xdb, 0xc6, 0xb1, 0x5a, 0x08, 0x5f, 0x2e, 0xcf, 0x39, 0x98, 0x0d, 0x89, 0x72, 0x21,
	0xa7, 0x91, 0xbf, 0x82, 0xb0, 0xb8, 0x86, 0x87, 0xce, 0xca, 0x47, 0xfc, 0x1a, 0xf2, 0x95, 0xe6,
	0x5d, 0xde, 0xf9, 0x17, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x79, 0x2d, 0x31, 0xab, 0x02, 0x00, 0x00,
}
